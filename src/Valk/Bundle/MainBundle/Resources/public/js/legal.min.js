/**
 * Battle.net Legal
 *
 * @copyright       Â©2013 Blizzard Entertainment, Inc. All rights reserved.
 */
'use strict';
var AgeGateInterceptor = {config: {}, form: $("#agegate-form"), submitButton: $("#agegate-submit"), yearSelect: $("#agegate-year"), monthSelect: $("#agegate-month"), daySelect: $("#agegate-day"), create: function (a) {
    this._construct(a);
    return this;
}, _construct: function (a) {
    if (!this.form.length) {
        return;
    }
    a = typeof a === "undefined" ? {} : a;
    this.config = $.extend({}, a);
    this.setup();
}, setup: function () {
    this.registerEvents();
}, registerEvents: function () {
    $(window).on("pageshow.agegate", $.proxy(this._onPageShow, this));
    this.form.on("submit.agegate", $.proxy(this._onFormSubmit, this));
    this.form.on("change.agegate", "select", $.proxy(this._onChangeSelect, this));
}, _onPageShow: function (a) {
    if (a.originalEvent.persisted) {
        this.resetForm();
    }
}, _onFormSubmit: function () {
    var a = this.form;
    this.submitButton.button("loading");
    return true;
}, _onChangeSelect: function () {
    if (this.yearSelect.val() === "" || this.monthSelect.val() === "" || this.daySelect.val() === "") {
        this.disableSubmitButton();
    } else {
        this.enableSubmitButton();
    }
}, disableSubmitButton: function () {
    this.submitButton.prop("disabled", true).attr("disabled", "disabled").addClass("disabled");
}, enableSubmitButton: function () {
    this.submitButton.button("reset");
}, resetForm: function () {
    this.yearSelect.find('[value=""]').trigger("click");
    this.monthSelect.find('[value=""]').trigger("click");
    this.daySelect.find('[value=""]').trigger("click");
    this.disableSubmitButton();
}};
var AgeGateUi = {config: {}, url: "/age-gate-async/", form: $("#agegate-form"), submitButton: $("#agegate-submit"), unknown: $("#agegate-unknown"), failure: $("#agegate-failure"), yearSelect: $("#agegate-year"), monthSelect: $("#agegate-month"), daySelect: $("#agegate-day"), create: function (a) {
    this._construct(a);
    return this;
}, _construct: function (a) {
    if (!this.form.length) {
        return;
    }
    a = typeof a === "undefined" ? {} : a;
    this.config = $.extend({url: ""}, a);
    this.setup();
}, setup: function () {
    var a = this.config;
    if (a.url !== "") {
        this.url = a.url;
    }
    this.registerEvents();
}, registerEvents: function () {
    $(window).on("pageshow.agegate", $.proxy(this._onPageShow, this));
    this.form.on("submit.agegate", $.proxy(this._onFormSubmit, this));
    this.form.on("change.agegate", "select", $.proxy(this._onChangeSelect, this));
    this.form.on("hidden.agegate", $.proxy(this._onModalHidden, this));
    this.form.on("show.agegate", $.proxy(this._onModalShow, this));
}, _onPageShow: function (a) {
    if (a.originalEvent.persisted) {
        this.resetForm();
    }
}, _onFormSubmit: function () {
    var e = this.form, g = this.unknown, c = this.failure, b = this.url, d = this.yearSelect.val(), f = this.monthSelect.val(), a = this.daySelect.val();
    this.submitButton.button("loading");
    $.ajax({url: b, type: "post", dataType: "json", context: this, data: {year: d, month: f, day: a}}).done(function (i) {
        if (typeof _gaq !== "undefined") {
            var h = "Age Gate";
            if (Msg.analytics.pagePrefix !== "") {
                h = Msg.analytics.pagePrefix + " " + h;
            }
            _gaq.push(["_trackEvent", h, "Submit", i]);
        }
        if (i === "FAILED") {
            e.addClass("agegate-failed");
            g.addClass("hide");
            c.removeClass("hide");
        }
        e.trigger("done.agegate", [i]);
    }).fail(function () {
        e.trigger("fail.agegate");
    });
    return false;
}, _onChangeSelect: function () {
    if (this.yearSelect.val() === "" || this.monthSelect.val() === "" || this.daySelect.val() === "") {
        this.disableSubmitButton();
    } else {
        this.enableSubmitButton();
    }
}, _onModalHidden: function () {
    this.resetForm();
}, _onModalShow: function () {
    this.resetForm();
}, disableSubmitButton: function () {
    this.submitButton.prop("disabled", true).attr("disabled", "disabled").addClass("disabled");
}, enableSubmitButton: function () {
    this.submitButton.button("reset");
}, resetForm: function () {
    this.yearSelect.find('[value=""]').trigger("click");
    this.monthSelect.find('[value=""]').trigger("click");
    this.daySelect.find('[value=""]').trigger("click");
    this.disableSubmitButton();
}};